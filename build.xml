<?xml version="1.0"?>

<project name="wyona-commons"
 default="usage"
 xmlns:wyona-tools="http://www.wyona.org/tools/1.0"
 xmlns:artifact="antlib:org.apache.maven.artifact.ant"
>

  <import file="tools/apache-ant_extras/artifacts.build.xml"/>
  <import file="javadoc.xml"/>

  <!-- How to see all the targets. -->
  <target name="usage">
    <echo>USAGE: ant -projecthelp</echo>
    <echo>NOTE: Read the README.txt</echo>
  </target>

  <!-- Init all parameters and other settings. -->
  <target name="init"><!-- depends="init-dependencies"-->
    <property file="local.build.properties"/>
    <property file="build.properties"/>
    <property name="source.home" value="${basedir}"/>

    <wyona-tools:dependencies class="xml+io"><!-- split wyona-commons into wyona-commons-xml and the rest! (wyona-commons-io?) -->
      <!-- INFO: log4j version 2 -->
      <dependency groupId="org.apache.logging.log4j" artifactId="log4j-api" version="2.0-beta8"/>
      <dependency groupId="org.apache.logging.log4j" artifactId="log4j-core" version="2.0-beta8"/>

      <!-- INFO: log4j version 1 -->
      <dependency groupId="log4j" artifactId="log4j" version="1.2.16" scope="compile"/><!-- default scope is "compile", just using it for testing! -->
      <dependency groupId="commons-io" artifactId="commons-io" version="1.2"/>
      <dependency groupId="commons-jxpath" artifactId="commons-jxpath" version="1.3" scope="test"/>
      <dependency groupId="junit" artifactId="junit-dep" version="4.5" scope="test"/>
      <dependency groupId="xml-resolver" artifactId="xml-resolver" version="1.1"/>
    </wyona-tools:dependencies>

    <property name="classes.dir" value="${build.dir}/classes"/>

    <path id="classpath.compile">
      <fileset refid="compile.jar.xml+io.dependencies.fileset"/>
    </path>

    <path id="classpath.test">
      <fileset refid="test.jar.xml+io.dependencies.fileset"/>
    </path>

    <path id="classpath.run">
      <pathelement path="${classes.dir}"/>
      <pathelement path="."/> <!-- log4j.properties -->
      <fileset refid="test.jar.xml+io.dependencies.fileset"/>
    </path>
  </target>

  <target name="eclipse:classpath" description="Update Eclipse's .classpath file" depends="init">
    <ant dir="${source.home}/tools/eclipse.settings" target="update-classpath"
     inheritAll="false" inheritRefs="false">
      <reference torefid="classpath.ref" refid="classpath.test"/>
      <property name="classpath.dir" value="${source.home}"/>
      <property name="classes.dir" value=""/>
      <property name="source.dirs" value="src/java:src/test/java"/>
    </ant>
  </target>

  <target name="eclipse" description="Generate all files needed to use the project under Eclipse (WARNING: .project file will be overwritten!)" depends="eclipse:classpath">
    <copy file="${source.home}/tools/eclipse.settings/Eclipse-3.template.project" tofile="${source.home}/.project">
      <filterset>
        <filter token="PROJECT_NAME" value="Wyona Commons"/>
        <filter token="PROJECT_VERSION" value="${commons.version}-r${subversion.revision}"/>
        <filter token="GENERATION_COMMAND" value="build eclipse"/>
      </filterset>
    </copy>
    <echo>Eclipse project created: in Eclipse you can now import (as an existing project into your workspace) this project with root directory set to ${source.home} and build it there!</echo>
  </target>

  <target name="compile" description="Compile Java classes" depends="init">
    <echo>${classes.dir}</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src/java" destdir="${classes.dir}"
           classpathref="classpath.compile"
           source="1.5"
           target="1.5"
           encoding="UTF-8"
           debug="true"
    />
  </target>

  <target name="compile-tests" description="Compile Java classes of tests" depends="init, compile">
    <echo>${classes.dir}</echo>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src/test/java" destdir="${classes.dir}"
           classpathref="classpath.test"
           source="1.5"
           target="1.5"
           encoding="UTF-8"
           debug="true"
    />
  </target>

  <target name="jar" description="Create a jar file" depends="init,compile">
    <mkdir dir="build/lib"/>

    <jar
      destfile="build/lib/wyona-org-commons-${commons.version}-r${subversion.revision}.jar"
      basedir="build/classes"
      excludes="org/wyona/commons/test/**"
    >
    </jar>
  </target>

  <target name="patch-pom-file" depends="init">
    <!--copy file="pom.xml" todir="build/lib"/>
    <replace file="build/lib/pom.xml" value="${commons.version}-r${subversion.revision}">
      <replacetoken>@VERSION@</replacetoken>
    </replace-->
    <wyona-tools:generate-POM source-home="${source.home}"
     in="build.xml" class="xml+io"
     group="wyona-org-commons" artifact="wyona-org-commons" version="${commons.version}-r${subversion.revision}"
     out="build/lib/pom.xml"
   />
  </target>

  <target name="install-jar" description="Place jar into local maven repository" depends="clean, jar, patch-pom-file">
    <artifact:pom id="maven.project.core" file="build/lib/pom.xml"/>

    <artifact:install file="build/lib/wyona-org-commons-${commons.version}-r${subversion.revision}.jar">
      <pom refid="maven.project.core"/>
    </artifact:install>
  </target>

  <target name="deploy-jar" description="Upload jar file into remote maven repository" depends="clean, init, jar, patch-pom-file">
    <!-- <artifact:install-provider artifactId="wagon-ssh" version="1.0-beta-2"/> -->
    <artifact:install-provider artifactId="wagon-ssh" version="1.0-alpha-7"/>

    <echo>deploying to ${repository.url}</echo>

    <artifact:pom id="maven.project.core" file="build/lib/pom.xml"/>

    <artifact:deploy file="build/lib/wyona-org-commons-${commons.version}-r${subversion.revision}.jar">
      <remoteRepository url="${repository.url}">
        <authentication username="${repository.username}" password="${repository.password}"/>
<!--
        <authentication username="${repository.username}" privateKey="${user.home}/.ssh/id_dsa"/>
-->
      </remoteRepository>
      <pom refid="maven.project.core"/>
    </artifact:deploy>
  </target>

  <target name="run-hello-world-tests" description="Run Hello World (including some tests)" depends="init, compile-tests">
    <java classname="org.wyona.commons.test.HelloWorld">
      <classpath refid="classpath.run"/>
    </java>
  </target>

  <target name="clean" description="Clean build" depends="init">
    <delete dir="build"/>
  </target>
</project>
